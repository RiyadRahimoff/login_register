plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.azecoders'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    //JPA&MySql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'

    //Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Liquibase
    implementation 'org.liquibase:liquibase-core'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'


    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Minio
    implementation 'io.minio:minio:8.5.7'


    //DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
